 31 
 32 def _is_admin(msg: Message) -> bool:
 33     return bool(msg.from_user and is_admin_uid(msg.from_user.id))
 34 
 35 
 36 def _user_keyboard() -> ReplyKeyboardMarkup:
 37     return ReplyKeyboardMarkup(
 38         keyboard=[
 39             [KeyboardButton(text="🛒 خرید سرویس"), KeyboardButton(text="📦 سفارش‌ها")],
 40             [KeyboardButton(text="👤 اکانت من"), KeyboardButton(text="💳 کیف پول")],
 41             [KeyboardButton(text="🧪 دریافت تست")],
 42         ], resize_keyboard=True
 43     )
 44 
 45 
 46 def _admin_keyboard() -> ReplyKeyboardMarkup:
 47     return ReplyKeyboardMarkup(
 48         keyboard=[
 49             [KeyboardButton(text="🛒 خرید سرویس"), KeyboardButton(text="📦 سفارش‌های من")],
 50             [KeyboardButton(text="👤 اکانت من"), KeyboardButton(text="💳 کیف پول")],
 51             [KeyboardButton(text="⚙️ تنظیمات ربات")],
 52         ], resize_keyboard=True
 53     )
 54 
 55 
 56 @router.message(CommandStart())
 57 async def handle_start(message: Message) -> None:
 58     logger.info("start.handle_start: enter", extra={'extra': {'uid': getattr(getattr(message, 'from_user', None), 'id', None), 'text': getattr(message, 'text', None)}})
 59     # Ensure a DB user record exists for anyone who starts the bot
 60     try:
 61         if message.from_user:
 62             tg_id = message.from_user.id
 63             async with session_scope() as session:
 64                 existing = await session.scalar(select(User).where(User.telegram_id == tg_id))
 65                 if not existing:
 66                     username = tg_username(tg_id)
 67                     u = User(
 68                         telegram_id=tg_id,
 69                         marzban_username=username,
 70                         subscription_token=None,
 71                         status="active",
 72                         data_limit_bytes=0,
 73                         balance=0,
 74                     )
 75                     session.add(u)
 76                     await session.flush()
 77                     await session.commit()
 78                 # Upsert Telegram username to settings for search (lowercased)
 79                 try:
 80                     tg_un = getattr(message.from_user, "username", None)
